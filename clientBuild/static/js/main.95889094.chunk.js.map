{"version":3,"sources":["store/actions/actionTypes.js","containers/ContentContainer/ContentContainer.module.css","store/actions/messages.js","store/actions/message.js","store/actions/submitMessage.js","store/actions/filterMessages.js","store/actions/sortMessages.js","store/actions/persons.js","store/actions/resources.js","store/actions/index.js","components/UI/Spinners/FormSpinner/FormSpinner.js","components/UI/Spinners/FormSpinner/FormSpinner.module.css","containers/Layout/Layout.module.css","components/UI/Buttons/Back/Back.js","containers/ContentContainer/ContentContainer.js","components/UI/ScrollToTop.js","containers/Cockpit/Cockpit.js","containers/Layout/Layout.js","App.js","serviceWorker.js","store/reducers/messages.js","store/reducers/message.js","store/reducers/persons.js","store/reducers/resources.js","index.js"],"names":["SUBMIT_MESSAGE_START","SUBMIT_MESSAGE_SUCCESS","SUBMIT_MESSAGE_FAIL","SUBMIT_MESSAGE_RESET","FETCH_MESSAGES_START","FETCH_MESSAGES_SUCCESS","FETCH_MESSAGES_FAIL","RESET_MESSAGES","FETCH_MESSAGE_START","FETCH_MESSAGE_SUCCESS","FETCH_MESSAGE_FAIL","RESET_MESSAGE","FILTER_MESSAGES_START","FILTER_MESSAGES_ADD","FILTER_MESSAGES_REMOVE","FILTER_MESSAGES_FAIL","FILTER_MESSAGES","SORT_MESSAGES_START","SORT_MESSAGES_ADD","SORT_MESSAGES_REMOVE","SORT_MESSAGES_FAIL","SORT_MESSAGES","SORT_RESET","FILTER_RESET","GET_PERSONS_START","GET_PERSONS_SUCCESS","GET_PERSONS_FAIL","GET_PERSONS_RESET","GET_RESOURCES_START","GET_RESOURCES_SUCCESS","GET_RESOURCES_FAIL","GET_RESOURCES_RESET","module","exports","fetchMessages","dispatch","a","fetchMessagesStart","fetch","method","mode","cache","credentials","headers","response","json","data","fetchMessagesSuccess","fetchMessagesFail","type","actionTypes","messages","filteredMessages","filter","message","approved","error","fetchMessage","messageId","fetchMessageStart","success","Error","fetchMessageSuccess","fetchMessageFail","resetMessage","submitMessage","submitMessageStart","body","JSON","stringify","submitMessageSuccess","submitMessageFail","submitMessageReset","addFilter","name","filtered","sort","filterMessagesStart","filterMessagesAdd","filterMessages","sortMessages","err","filterMessagesFail","removeFilter","filterMessagesRemove","addSort","sortMessagesStart","sortMessagesAdd","sortMessagesFail","removeSort","sortMessagesRemove","getPersons","getPersonsStart","getPersonsSuccess","getPersonsFail","persons","getResources","getResourcesStart","getResourcesSuccess","getResourcesFail","resources","FormSpinner","className","styles","loader","withRouter","props","icon","faArrowAltCircleLeft","size","style","color","onClick","path","history","push","ContentContainer","HeaderContainer","BackButton","Header","Container","ChildrenContainer","children","useEffect","unlisten","listen","window","scrollTo","Landing","React","lazy","FullMessage","Resources","Cockpit","useDispatch","Promise","all","fallback","exact","Layout","Row","Col","App","Boolean","location","hostname","match","initialState","filters","who","identity","loading","reducer","state","action","messagesCopy","newFilteredMessages","filteredCopy","sortedMessages","b","Date","createdAt","currentMessage","messageSuccess","setSuccess","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.95889094.chunk.js","sourcesContent":["export const SUBMIT_MESSAGE_START = \"SUBMIT_MESSAGE_START\";\nexport const SUBMIT_MESSAGE_SUCCESS = \"SUBMIT_MESSAGE_SUCCESS\";\nexport const SUBMIT_MESSAGE_FAIL = \"SUBMIT_MESSAGE_FAIL\";\nexport const SUBMIT_MESSAGE_RESET = \"SUBMIT_MESSAGE_RESET\";\n\nexport const FETCH_MESSAGES_START = \"FETCH_MESSAGES_START\";\nexport const FETCH_MESSAGES_SUCCESS = \"FETCH_MESSAGES_SUCCESS\";\nexport const FETCH_MESSAGES_FAIL = \"FETCH_MESSAGES_FAIL\";\nexport const RESET_MESSAGES = \"RESET_MESSAGES\";\n\nexport const FETCH_MESSAGE_START = \"FETCH_MESSAGE_START\";\nexport const FETCH_MESSAGE_SUCCESS = \"FETCH_MESSAGE_SUCCESS\";\nexport const FETCH_MESSAGE_FAIL = \"FETCH_MESSAGE_FAIL\";\nexport const RESET_MESSAGE = \"RESET_MESSAGE\";\n\nexport const ADD_FILTER = \"ADD_FILTER\";\nexport const REMOVE_FILTER = \"REMOVE_FILTER\";\n\nexport const FILTER_MESSAGES_START = \"FILTER_MESSAGES_START\";\nexport const FILTER_MESSAGES_ADD = \"FILTER_MESSAGES_ADD\";\nexport const FILTER_MESSAGES_REMOVE = \"FILTER_MESSAGES_REMOVE\";\nexport const FILTER_MESSAGES_FAIL = \"FILTER_MESSAGES_FAIL\";\nexport const FILTER_MESSAGES = \"FILTER_MESSAGES\";\n\nexport const SORT_MESSAGES_START = \"SORT_MESSAGES_START\";\nexport const SORT_MESSAGES_ADD = \"SORT_MESSAGES_ADD\";\nexport const SORT_MESSAGES_REMOVE = \"SORT_MESSAGES_REMOVE\";\nexport const SORT_MESSAGES_FAIL = \"SORT_MESSAGES_FAIL\";\nexport const SORT_MESSAGES = \"SORT_MESSAGES\";\n\nexport const SORT_RESET = \"SORT_RESET\";\nexport const FILTER_RESET = \"FILTER_RESET\";\n\nexport const GET_PERSONS_START = \"GET_PERSONS_START\";\nexport const GET_PERSONS_SUCCESS = \"GET_PERSONS_SUCCESS\";\nexport const GET_PERSONS_FAIL = \"GET_PERSONS_FAIL\";\nexport const GET_PERSONS_RESET = \"GET_PERSONS_RESET\";\n\nexport const GET_RESOURCES_START = \"GET_RESOURCES_START\";\nexport const GET_RESOURCES_SUCCESS = \"GET_RESOURCES_SUCCESS\";\nexport const GET_RESOURCES_FAIL = \"GET_RESOURCES_FAIL\";\nexport const GET_RESOURCES_RESET = \"GET_RESOURCES_RESET\";\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderContainer\":\"ContentContainer_HeaderContainer__aV_-9\",\"ChildrenContainer\":\"ContentContainer_ChildrenContainer__PK4-d\",\"Header\":\"ContentContainer_Header__NIG8l\",\"BackButton\":\"ContentContainer_BackButton__3cF5k\"};","import * as actionTypes from \"./actionTypes\";\n\nexport const fetchMessages = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchMessagesStart());\n      const response = await fetch(\"/api/messages\", {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n\n      dispatch(fetchMessagesSuccess(data.data));\n    } catch (err) {\n      dispatch(fetchMessagesFail(err));\n    }\n  };\n};\n\nexport const fetchMessagesStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_START,\n  };\n};\n\nexport const fetchMessagesSuccess = (messages) => {\n  const filteredMessages = messages.filter((message) => message.approved);\n  return {\n    type: actionTypes.FETCH_MESSAGES_SUCCESS,\n    messages: filteredMessages,\n  };\n};\n\nexport const fetchMessagesFail = (error) => {\n  return {\n    type: actionTypes.FETCH_MESSAGES_FAIL,\n    error,\n  };\n};\n\nexport const fetchMessagesReset = () => {\n  return {\n    type: actionTypes.RESET_MESSAGE,\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\n\nexport const fetchMessage = (messageId) => {\n  return async (dispatch) => {\n    try {\n      dispatch(fetchMessageStart());\n      const response = await fetch(`/api/messages/${messageId}`, {\n        method: \"GET\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error();\n      }\n      dispatch(fetchMessageSuccess(data.data));\n    } catch (err) {\n      dispatch(\n        fetchMessageFail(\n          \"Either this message doesn't exist or has been deleted.\"\n        )\n      );\n    }\n  };\n};\n\nexport const fetchMessageStart = () => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_START,\n  };\n};\n\nexport const fetchMessageSuccess = (message) => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_SUCCESS,\n    message,\n  };\n};\n\nexport const fetchMessageFail = (error) => {\n  return {\n    type: actionTypes.FETCH_MESSAGE_FAIL,\n    error,\n  };\n};\n\nexport const resetMessage = () => {\n  return {\n    type: actionTypes.RESET_MESSAGE,\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\n\nexport const submitMessage = (message) => {\n  return async (dispatch) => {\n    try {\n      dispatch(submitMessageStart());\n      const response = await fetch(\"/api/messages\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(message),\n      });\n      const data = await response.json();\n      dispatch(submitMessageSuccess(data));\n    } catch (err) {\n      dispatch(submitMessageFail(err));\n    }\n  };\n};\n\nexport const submitMessageStart = () => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_START,\n  };\n};\n\nexport const submitMessageSuccess = (message) => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_SUCCESS,\n    message,\n  };\n};\n\nexport const submitMessageFail = (error) => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_FAIL,\n    error: error.message,\n  };\n};\n\nexport const submitMessageReset = () => {\n  return {\n    type: actionTypes.SUBMIT_MESSAGE_RESET,\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\nimport { sortMessages } from \"./index\";\n\nexport const addFilter = (filter, name, filtered, sort) => {\n  return dispatch => {\n    try {\n      dispatch(filterMessagesStart());\n      dispatch(filterMessagesAdd(filter, name));\n      dispatch(filterMessages());\n      if (sort) {\n        dispatch(sortMessages(filtered));\n      }\n    } catch (err) {\n      dispatch(filterMessagesFail(err));\n    }\n  };\n};\n\nexport const removeFilter = (filter, name, filtered, sort) => {\n  return dispatch => {\n    try {\n      dispatch(filterMessagesStart());\n      dispatch(filterMessagesRemove(filter, name));\n      dispatch(filterMessages());\n      if (sort) {\n        dispatch(sortMessages(filtered));\n      }\n    } catch (err) {\n      dispatch(filterMessagesFail(err));\n    }\n  };\n};\n\nexport const filterMessagesAdd = (filter, name) => {\n  return {\n    type: actionTypes.FILTER_MESSAGES_ADD,\n    filter,\n    name\n  };\n};\n\nexport const filterMessagesRemove = (filter, name) => {\n  return {\n    type: actionTypes.FILTER_MESSAGES_REMOVE,\n    filter,\n    name\n  };\n};\n\nexport const filterMessages = () => {\n  return {\n    type: actionTypes.FILTER_MESSAGES\n  };\n};\n\nexport const filterMessagesStart = () => {\n  return {\n    type: actionTypes.FILTER_MESSAGES_START\n  };\n};\n\nexport const filterMessagesFail = error => {\n  return {\n    type: actionTypes.FILTER_MESSAGES_FAIL,\n    error\n  };\n};\n\nexport const filterReset = () => {\n  return {\n    type: actionTypes.FILTER_RESET\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\n\nexport const addSort = (filter, filtered) => {\n  return dispatch => {\n    try {\n      dispatch(sortMessagesStart());\n      dispatch(sortMessagesAdd(filter));\n      dispatch(sortMessages(filtered));\n    } catch (err) {\n      dispatch(sortMessagesFail(err));\n    }\n  };\n};\n\nexport const removeSort = (filter, filtered) => {\n  return dispatch => {\n    try {\n      dispatch(sortMessagesStart());\n      dispatch(sortMessagesRemove(filter));\n      dispatch(sortMessages(filtered));\n    } catch (err) {\n      dispatch(sortMessagesFail(err));\n    }\n  };\n};\n\nexport const sortMessagesAdd = filter => {\n  return {\n    type: actionTypes.SORT_MESSAGES_ADD,\n    filter\n  };\n};\n\nexport const sortMessagesRemove = filter => {\n  return {\n    type: actionTypes.SORT_MESSAGES_REMOVE,\n    filter\n  };\n};\n\nexport const sortMessages = filtered => {\n  return {\n    type: actionTypes.SORT_MESSAGES,\n    filtered\n  };\n};\n\nexport const sortMessagesStart = () => {\n  return {\n    type: actionTypes.SORT_MESSAGES_START\n  };\n};\n\nexport const sortMessagesFail = error => {\n  return {\n    type: actionTypes.SORT_MESSAGES_FAIL,\n    error\n  };\n};\n\nexport const sortReset = () => {\n  return {\n    type: actionTypes.SORT_RESET\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\n\nexport const getPersons = () => {\n  return async (dispatch) => {\n    try {\n      await dispatch(getPersonsStart());\n      const response = await fetch(\"/api/persons\", {\n        method: \"GET\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      await dispatch(getPersonsSuccess(data.data));\n    } catch (err) {\n      await dispatch(getPersonsFail(err));\n    }\n  };\n};\n\nexport const getPersonsStart = () => {\n  return {\n    type: actionTypes.GET_PERSONS_START,\n  };\n};\n\nexport const getPersonsSuccess = (persons) => {\n  return {\n    type: actionTypes.GET_PERSONS_SUCCESS,\n    persons,\n  };\n};\n\nexport const getPersonsFail = (error) => {\n  return {\n    type: actionTypes.GET_PERSONS_FAIL,\n    error: error.message,\n  };\n};\n\nexport const getPersonsReset = () => {\n  return {\n    type: actionTypes.GET_PERSONS_RESET,\n  };\n};\n","import * as actionTypes from \"./actionTypes\";\n\nexport const getResources = () => {\n  return async (dispatch) => {\n    try {\n      await dispatch(getResourcesStart());\n      const response = await fetch(\"/api/resources\", {\n        method: \"GET\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await response.json();\n      await dispatch(getResourcesSuccess(data.data));\n    } catch (err) {\n      await dispatch(getResourcesFail(err));\n    }\n  };\n};\n\nexport const getResourcesStart = () => {\n  return {\n    type: actionTypes.GET_RESOURCES_START,\n  };\n};\n\nexport const getResourcesSuccess = (resources) => {\n  return {\n    type: actionTypes.GET_RESOURCES_SUCCESS,\n    resources,\n  };\n};\n\nexport const getResourcesFail = (error) => {\n  return {\n    type: actionTypes.GET_RESOURCES_FAIL,\n    error: error.message,\n  };\n};\n\nexport const getResourcesReset = () => {\n  return {\n    type: actionTypes.GET_RESOURCES_RESET,\n  };\n};\n","export { fetchMessages, fetchMessagesReset } from \"./messages\";\n\nexport { fetchMessage, resetMessage } from \"./message\";\n\nexport { submitMessage, submitMessageReset } from \"./submitMessage\";\n\nexport { addFilter, removeFilter } from \"./filterMessages\";\n\nexport { addSort, removeSort, sortMessages } from \"./sortMessages\";\n\nexport { getPersons, getPersonsReset } from \"./persons\";\n\nexport { getResources, getResourcesReset } from \"./resources\";\n","import React from \"react\";\nimport styles from \"./FormSpinner.module.css\";\n\nconst FormSpinner = () => {\n  return <div className={styles.loader}></div>;\n};\n\nexport default FormSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"FormSpinner_loader__Ac1sN\",\"load8\":\"FormSpinner_load8__27LER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContentContainer\":\"Layout_ContentContainer__1flrp\"};","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowAltCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Back = props => {\n  const backHandler = path => {\n    props.history.push(path);\n  };\n  return (\n    <FontAwesomeIcon\n      icon={faArrowAltCircleLeft}\n      size={props.size}\n      style={{ color: \"orange\" }}\n      onClick={() => backHandler(props.path)}\n    />\n  );\n};\n\nexport default withRouter(Back);\n","import React from \"react\";\nimport styles from \"./ContentContainer.module.css\";\nimport Back from \"../../components/UI/Buttons/Back/Back\";\nimport Container from \"react-bootstrap/Container\";\n\nconst ContentContainer = props => {\n  return (\n    <div className={styles.ContentContainer}>\n      <div className={styles.HeaderContainer}>\n        <span className={styles.BackButton}>\n          <Back size=\"2x\" path=\"/\" />{\" \"}\n        </span>\n        <span className={styles.Header}>If You Were Here...</span>\n      </div>\n      <Container className={styles.ChildrenContainer}>\n        {props.children}\n      </Container>\n    </div>\n  );\n};\n\nexport default ContentContainer;\n","import { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nconst ScrollToTop = (props) => {\n  useEffect(() => {\n    const unlisten = props.history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    };\n  }, [props.history]);\n\n  return null;\n};\n\nexport default withRouter(ScrollToTop);\n","import React, { useEffect, Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { getPersons, fetchMessages } from \"../../store/actions\";\nimport { useDispatch } from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinners/FormSpinner/FormSpinner\";\nimport ContentContainer from \"../ContentContainer/ContentContainer\";\nimport ScrollToTop from \"../../components/UI/ScrollToTop\";\n\nconst Landing = React.lazy(() => import(\"../../components/Landing/Landing\"));\nconst FullMessage = React.lazy(() =>\n  import(\"../../components/FullMessage/FullMessage\")\n);\nconst Resources = React.lazy(() =>\n  import(\"../../components/Resources/Resources\")\n);\n\nconst Cockpit = (props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    Promise.all([dispatch(getPersons()), dispatch(fetchMessages())]);\n  }, [dispatch]);\n\n  let cockpitBody = (\n    <>\n      <ScrollToTop />\n      <Suspense fallback={<Spinner />}>\n        <Switch>\n          <Route exact path=\"/message/:id\">\n            <ContentContainer>\n              <FullMessage {...props} />\n            </ContentContainer>\n          </Route>\n          <Route exact path=\"/resources\">\n            <ContentContainer>\n              <Resources {...props} />\n            </ContentContainer>\n          </Route>\n          <Route path=\"/\">\n            <Landing {...props} />\n          </Route>\n        </Switch>\n      </Suspense>\n    </>\n  );\n\n  return cockpitBody;\n};\n\nexport default Cockpit;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport styles from \"./Layout.module.css\";\n\nconst Layout = props => {\n  return (\n    <Container className={styles.ContentContainer}>\n      <Row>\n        <Col>{props.children}</Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport Cockpit from \"./containers/Cockpit/Cockpit\";\nimport Layout from \"./containers/Layout/Layout\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Cockpit />\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  messages: [],\n  filteredMessages: [],\n  filters: { who: null, identity: null },\n  sort: null,\n  loading: false,\n  error: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FETCH_MESSAGES_SUCCESS:\n      return {\n        ...state,\n        messages: [...action.messages],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FETCH_MESSAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: `${action.error}`,\n      };\n    case actionTypes.RESET_MESSAGES:\n      return {\n        loading: false,\n        error: null,\n      };\n\n    //filter & sort logic below-- has to be in this reducer as it needs to be in same scope as messages\n    case actionTypes.FILTER_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.FILTER_MESSAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.FILTER_MESSAGES_ADD:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: action.filter,\n        },\n      };\n    case actionTypes.FILTER_MESSAGES_REMOVE:\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          [action.name]: null,\n        },\n      };\n    case actionTypes.FILTER_MESSAGES:\n      const { who, identity } = state.filters;\n      const messagesCopy = [...state.messages];\n      const newFilteredMessages =\n        who && identity\n          ? messagesCopy.filter(\n              (message) =>\n                message.who.name === who && message.identity.name === identity\n            )\n          : messagesCopy.filter(\n              (message) =>\n                message.who.name === who || message.identity.name === identity\n            );\n      return {\n        ...state,\n        filteredMessages: [...newFilteredMessages],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.FILTER_RESET:\n      return {\n        ...state,\n        filteredMessages: [],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.SORT_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.SORT_MESSAGES_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.SORT_MESSAGES_ADD:\n      return {\n        ...state,\n        sort: action.filter,\n      };\n    case actionTypes.SORT_MESSAGES_REMOVE:\n      return {\n        ...state,\n        sort: false,\n      };\n    case actionTypes.SORT_MESSAGES:\n      const filteredCopy = action.filtered\n        ? [...state.filteredMessages]\n        : [...state.messages];\n      const sortedMessages =\n        state.sort === \"Oldest\"\n          ? filteredCopy.sort(\n              (a, b) => new Date(a.createdAt) - new Date(b.createdAt)\n            )\n          : filteredCopy.sort(\n              (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n            );\n      return {\n        ...state,\n        filteredMessages: [...sortedMessages],\n        loading: false,\n        error: null,\n      };\n    case actionTypes.SORT_RESET:\n      return {\n        ...state,\n        sort: null,\n        loading: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  currentMessage: null,\n  messageSuccess: null,\n  setSuccess: null,\n  loading: false,\n  error: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_MESSAGE_START:\n      return {\n        ...state,\n        loading: true,\n        // setSuccess: null,\n      };\n    case actionTypes.FETCH_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        currentMessage: action.message,\n        // setSuccess: true,\n        loading: false,\n      };\n    case actionTypes.FETCH_MESSAGE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        currentMessage: null,\n        // setSuccess: false,\n        error: `${action.error}`,\n      };\n    case actionTypes.RESET_MESSAGE:\n      return {\n        ...state,\n        currentMessage: null,\n        // setSuccess: null,\n        error: null,\n        loading: false,\n      };\n\n    // submit message logic below\n    case actionTypes.SUBMIT_MESSAGE_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case actionTypes.SUBMIT_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        messageSuccess: true,\n        loading: true,\n      };\n    case actionTypes.SUBMIT_MESSAGE_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.SUBMIT_MESSAGE_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        messageSuccess: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  persons: [],\n  loading: false,\n  error: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_PERSONS_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.GET_PERSONS_SUCCESS:\n      return {\n        ...state,\n        persons: [...action.persons],\n        loading: false,\n      };\n    case actionTypes.GET_PERSONS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.GET_PERSONS_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  resources: [],\n  loading: false,\n  error: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_RESOURCES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.GET_RESOURCES_SUCCESS:\n      return {\n        ...state,\n        resources: [...action.resources],\n        loading: false,\n      };\n    case actionTypes.GET_RESOURCES_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case actionTypes.GET_RESOURCES_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport messages from \"./store/reducers/messages\";\nimport message from \"./store/reducers/message\";\nimport persons from \"./store/reducers/persons\";\nimport resources from \"./store/reducers/resources\";\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({ messages, message, persons, resources });\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}