{"version":3,"sources":["../node_modules/react-bootstrap/esm/Col.js","components/UI/FormSpinner/FormSpinner.js","components/UI/FormSpinner/FormSpinner.module.css","components/UserForm/UserForm.js","components/UserForm/UserForm.module.css","containers/EditUserPage/EditUserPage.module.css","components/UserInfoHeader/UserInfoHeader.module.css","components/UserInfoHeader/UserInfoHeader.js","containers/EditUserPage/EditUserPage.js"],"names":["DEVICE_SIZES","Col","React","forwardRef","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","createElement","_extends","classNames","apply","concat","displayName","Spinner","styles","loader","module","exports","UserForm","useState","userEmail","setUserEmail","userRole","setUserRole","firstName","setFirstName","lastName","setLastName","user","useSelector","state","auth","token","loading","editLoading","currentUser","id","type","submitHandler","setValidations","dispatch","useDispatch","options","useMemo","value","label","useEffect","email","optionIndex","findIndex","option","role","validateForm","failures","regex","RegExp","match","nameHandler","name","submitForm","a","payload","modifiedBy","createdBy","validated","buttonText","nameOption","Option","Control","placeholder","onChange","event","target","style","disabled","providerId","defaultValue","variant","onClick","userInfoHeader","userInfo","color","icon","faPen","size","User","Date","createdAt","toDateString","faEdit","updatedAt","withRouter","setUser","validations","location","passedUser","setPassedUser","userSuccess","editUserSuccess","error","useParams","editUserReset","getUser","userBody","UserInfoHeader","editUser","join","success","Container","Jumbotron","lg"],"mappings":"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","file":"static/js/14.843e73b6.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import React from \"react\";\nimport styles from \"./FormSpinner.module.css\";\n\nconst Spinner = () => {\n  return <div className={styles.loader}></div>;\n};\n\nexport default Spinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"FormSpinner_loader__1L2La\",\"load1\":\"FormSpinner_load1__NnjDF\"};","import React, { useEffect, useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Select from \"react-select\";\nimport styles from \"./UserForm.module.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FormSpinner from \"../../components/UI/FormSpinner/FormSpinner\";\n\nconst UserForm = (props) => {\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userRole, setUserRole] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const user = useSelector((state) => state.auth.user);\n  const token = useSelector((state) => state.auth.token);\n  const loading = useSelector((state) => state.user.editLoading);\n\n  const { currentUser, id, type, submitHandler, setValidations } = props;\n\n  const dispatch = useDispatch();\n\n  const options = useMemo(\n    () => [\n      { value: \"ADMIN\", label: \"Admin\" },\n      { value: \"SUPER_ADMIN\", label: \"Super Admin\" },\n    ],\n    []\n  );\n\n  useEffect(() => {\n    if (currentUser) {\n      setUserEmail(currentUser.email);\n      const optionIndex = options.findIndex(\n        (option) => option.value === currentUser.role\n      );\n      setUserRole(options[optionIndex]);\n    }\n  }, [dispatch, options, currentUser]);\n\n  const validateForm = () => {\n    let failures = [];\n\n    if (userEmail === null || userEmail.length < 1 || userRole.length < 1) {\n      failures = [...failures, \"Make sure no fields are blank\"];\n    }\n\n    const regex = new RegExp(\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n      \"i\"\n    );\n\n    if (!userEmail.match(regex)) {\n      failures = [...failures, \"Make sure to enter a valid Email\"];\n    }\n\n    if (failures.length > 0) {\n      setValidations(failures);\n      return false;\n    } else {\n      setValidations(null);\n      return true;\n    }\n  };\n\n  const nameHandler = (name, type) => {\n    if (type === \"first\") {\n      setFirstName(name);\n    } else {\n      setLastName(name);\n    }\n  };\n\n  const emailHandler = (name) => {\n    setUserEmail(name);\n  };\n\n  const roleHandler = (role) => {\n    setUserRole(role);\n  };\n\n  const submitForm = async () => {\n    const payload =\n      type === \"edit\"\n        ? {\n            email: userEmail,\n            modifiedBy: user.id,\n            role: userRole.value,\n            token,\n            id,\n          }\n        : {\n            firstName,\n            lastName,\n            email: userEmail,\n            role: userRole.value,\n            createdBy: user.id,\n            token,\n          };\n    const validated = validateForm();\n    await submitHandler(validateForm, payload);\n    if (validated && type === \"add\") {\n      setUserEmail(\"\");\n      setUserRole(\"\");\n      setFirstName(\"\");\n      setLastName(\"\");\n    }\n  };\n\n  let buttonText = loading ? (\n    <>\n      <FormSpinner /> Submitting...\n    </>\n  ) : (\n    \"Submit\"\n  );\n\n  let nameOption = null;\n\n  if (type === \"add\") {\n    nameOption = (\n      <>\n        <div className={styles.Option}>\n          <b>First Name: </b>\n        </div>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"First Name\"\n          value={firstName}\n          onChange={(event) => nameHandler(event.target.value, \"first\")}\n          style={{}}\n        />\n        <br />\n        <div className={styles.Option}>\n          <b>Last Name: </b>\n        </div>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Last Name\"\n          value={lastName}\n          onChange={(event) => nameHandler(event.target.value, \"last\")}\n          style={{}}\n        />\n        <br />\n      </>\n    );\n  } else {\n    nameOption = (\n      <div className={styles.Option}>\n        <b>Name:</b> {currentUser.firstName} {currentUser.lastName}\n        <br />\n        <br />\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <Form>\n        {nameOption}\n        <div className={styles.Option}>\n          <b>Email: </b>\n        </div>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Email\"\n          value={userEmail}\n          disabled={currentUser ? currentUser.providerId : false}\n          onChange={(event) => emailHandler(event.target.value)}\n        />\n        <br />\n        <div className={styles.Option}>\n          <b>Role: </b>\n        </div>\n        <Select\n          defaultValue={userRole}\n          value={userRole}\n          options={options}\n          onChange={(event) => roleHandler(event)}\n        />\n      </Form>\n      <br />\n      <center>\n        <Button variant=\"primary\" onClick={() => submitForm()}>\n          {buttonText}\n        </Button>\n      </center>\n    </>\n  );\n};\n\nexport default UserForm;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option\":\"UserForm_Option__6w_dS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"validations\":\"EditUserPage_validations__2vHXX\",\"success\":\"EditUserPage_success__2Yiqt\",\"Option\":\"EditUserPage_Option__3ctoa\",\"UserHeader\":\"EditUserPage_UserHeader__3yYWl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"UserInfoHeader_link__ddyt9\",\"User\":\"UserInfoHeader_User__1gmpu\",\"Option\":\"UserInfoHeader_Option__WWmN1\",\"Name\":\"UserInfoHeader_Name__2HYO1\"};","import React from \"react\";\nimport styles from \"./UserInfoHeader.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nconst userInfoHeader = (props) => {\n  const { user } = props;\n\n  const userInfo = user ? (\n    <>\n      <span style={{ color: user.providerId ? \"green\" : \"red\" }}>\n        <b>{user.providerId ? \"Registered\" : \"Not Registered\"}</b> <br />\n      </span>\n    </>\n  ) : null;\n\n  const createdBy =\n    user && user.createdBy ? (\n      <>\n        <b>\n          Created{\" \"}\n          <FontAwesomeIcon\n            icon={faPen}\n            size={\"1x\"}\n            style={{ color: \"green\" }}\n          />{\" \"}\n          by <span className={styles.User}>{user.createdBy.email}</span> on{\" \"}\n          {new Date(user.createdAt).toDateString()}\n        </b>\n        <br />\n      </>\n    ) : null;\n\n  const modifiedBy =\n    user && user.modifiedBy ? (\n      <>\n        <b>\n          Modified{\" \"}\n          <FontAwesomeIcon\n            icon={faEdit}\n            size={\"1x\"}\n            style={{ color: \"orange\" }}\n          />{\" \"}\n          by <span className={styles.User}> {user.modifiedBy.email} </span> on{\" \"}\n          {new Date(user.updatedAt).toDateString()}\n        </b>\n      </>\n    ) : null;\n\n  return (\n    <>\n      {userInfo}\n      <br />\n      <div className={styles.Option}>\n        {createdBy}\n        {modifiedBy}\n      </div>\n      <hr />\n    </>\n  );\n};\n\nexport default userInfoHeader;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, withRouter } from \"react-router-dom\";\nimport { getUser, editUser, editUserReset } from \"../../store/actions\";\nimport styles from \"./EditUserPage.module.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport UserForm from \"../../components/UserForm/UserForm\";\nimport UserInfoHeader from \"../../components/UserInfoHeader/UserInfoHeader\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nconst EditUserPage = (props) => {\n  const [user, setUser] = useState(null);\n  const [validations, setValidations] = useState(null);\n  const [passedUser, setPassedUser] = useState(props.location.passedUser);\n  const currentUser = useSelector((state) => state.user.currentUser);\n  const userSuccess = useSelector((state) => state.user.editUserSuccess);\n  const loading = useSelector((state) => state.user.loading);\n  const error = useSelector((state) => state.user.error);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  useEffect(() => {\n    return () => dispatch(editUserReset());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!currentUser && !passedUser && id) {\n      dispatch(getUser(id));\n    } else if (!error) {\n      const populatedUser = currentUser ? currentUser : passedUser;\n      setUser(populatedUser);\n    }\n  }, [dispatch, id, error, currentUser, passedUser]);\n\n  useEffect(() => {\n    if (passedUser && currentUser) {\n      setPassedUser(null);\n    }\n  }, [passedUser, currentUser]);\n\n  const submitHandler = (validateForm, payload) => {\n    const validated = validateForm();\n    if (validated) {\n      dispatch(editUser(payload));\n    }\n  };\n\n  let userBody = <Spinner />;\n\n  if (user && !loading) {\n    userBody = (\n      <>\n        <UserInfoHeader user={user} />\n        <UserForm\n          currentUser={user}\n          id={id}\n          setValidations={setValidations}\n          submitHandler={submitHandler}\n          type=\"edit\"\n        />\n        <br />\n        <span className={styles.validations}>\n          {validations ? (\n            <>\n              {validations.join(\", \")} <br />\n            </>\n          ) : null}\n          {error}\n        </span>\n        <span className={styles.success}>\n          {userSuccess && !validations ? \"SUCCESS! User updated.\" : null}\n        </span>\n      </>\n    );\n  }\n\n  if (!currentUser && !passedUser && error) {\n    userBody = <span className={styles.validations}>ERROR: {error}</span>;\n  }\n\n  return (\n    <Container>\n      <Jumbotron>\n        <center>\n          <h1>Edit Admin</h1>\n          <br />\n          <Col lg=\"5\">{userBody}</Col>\n        </center>\n      </Jumbotron>\n    </Container>\n  );\n};\n\nexport default withRouter(EditUserPage);\n"],"sourceRoot":""}