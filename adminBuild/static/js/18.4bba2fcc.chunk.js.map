{"version":3,"sources":["components/ProfileHeader/ProfileHeader.module.css","components/ProfileHeader/ProfileHeader.js","containers/Profile/Profile.js"],"names":["module","exports","MessageInfoHeader","props","error","dispatch","useDispatch","toggleHandler","a","toggleNotification","id","user","notifications","token","userInfoHeader","className","styles","On","icon","faCheck","size","style","color","onClick","link","Off","faTimes","validations","Profile","useSelector","state","auth","notificationSuccess","useEffect","toggleNotificationReset","messageInfoHeader","loading","Spinner","ProfileHeader","Container","Jumbotron","name","email","role"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,KAAO,4BAA4B,IAAM,2BAA2B,GAAK,0BAA0B,YAAc,mCAAmC,QAAU,iC,uIC8DjKC,EAvDW,SAACC,GAAW,IAC5BC,EAAUD,EAAVC,MACFC,EAAWC,cAEXC,EAAa,uCAAG,sBAAAC,EAAA,sEACdH,EACJI,YAAmB,CACjBC,GAAIP,EAAMQ,KAAKD,GACfE,eAAgBT,EAAMQ,KAAKC,cAC3BC,MAAOV,EAAMU,SALG,2CAAH,qDAUfC,EAAiB,KA8BrB,OA5BIX,EAAMQ,MAAQR,EAAMQ,KAAKC,cAC3BE,EACE,oCACE,0BAAMC,UAAWC,IAAOC,IAAxB,MAAsC,IACtC,kBAAC,IAAD,CACEC,KAAMC,IACNC,KAAM,KACNC,MAAO,CAAEC,MAAO,WACf,IACH,6BACA,0BAAMC,QAAS,kBAAMhB,KAAiBQ,UAAWC,IAAOQ,MACtD,0CAIGrB,EAAMQ,OAASR,EAAMQ,KAAKC,gBACnCE,EACE,oCACE,0BAAMC,UAAWC,IAAOS,KAAxB,OAAwC,IACxC,kBAAC,IAAD,CAAiBP,KAAMQ,IAASN,KAAM,KAAMC,MAAO,CAAEC,MAAO,SAAY,IACxE,6BACA,0BAAMC,QAAS,kBAAMhB,KAAiBQ,UAAWC,IAAOQ,MACtD,0CAON,oCACE,6CADF,IACyBV,EACvB,gCACE,0BAAMC,UAAWC,IAAOW,aAAcvB,IAExC,+B,yBCNSwB,UA5CC,WACd,IAAMf,EAAQgB,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKlB,SAC1CF,EAAOkB,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKpB,QACzCqB,EAAsBH,aAC1B,SAACC,GAAD,OAAWA,EAAMC,KAAKC,uBAElB5B,EAAQyB,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAK3B,SAE1CC,EAAWC,cAEjB2B,qBAAU,WACR,OAAO,YACDD,GAAuB5B,IACzBC,EAAS6B,kBAGZ,CAAC7B,EAAU2B,EAAqB5B,IAEnC,IAEM+B,EAFsBN,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKK,WAG5D,kBAACC,EAAA,EAAD,MAEA,kBAACC,EAAD,CAAe3B,KAAMA,EAAME,MAAOA,IAGpC,OACE,kBAAC0B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,gCACE,wCAEF,6BACCL,EACD,oCANF,IAMgBxB,EAAK8B,KACnB,6BACA,sCARF,IAQkB9B,EAAK+B,MACrB,6BACA,qCAVF,IAUiB/B,EAAKgC","file":"static/js/18.4bba2fcc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"ProfileHeader_link__1bDBl\",\"Off\":\"ProfileHeader_Off__2ZWY0\",\"On\":\"ProfileHeader_On__1ymuR\",\"validations\":\"ProfileHeader_validations__kB9-f\",\"success\":\"ProfileHeader_success__2FzP-\"};","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./ProfileHeader.module.css\";\nimport { toggleNotification } from \"../../store/actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst MessageInfoHeader = (props) => {\n  const { error } = props;\n  const dispatch = useDispatch();\n\n  const toggleHandler = async () => {\n    await dispatch(\n      toggleNotification({\n        id: props.user.id,\n        notifications: !props.user.notifications,\n        token: props.token,\n      })\n    );\n  };\n\n  let userInfoHeader = null;\n\n  if (props.user && props.user.notifications) {\n    userInfoHeader = (\n      <>\n        <span className={styles.On}>ON</span>{\" \"}\n        <FontAwesomeIcon\n          icon={faCheck}\n          size={\"1x\"}\n          style={{ color: \"green\" }}\n        />{\" \"}\n        <br />\n        <span onClick={() => toggleHandler()} className={styles.link}>\n          <b>Turn Off?</b>\n        </span>\n      </>\n    );\n  } else if (props.user && !props.user.notifications) {\n    userInfoHeader = (\n      <>\n        <span className={styles.Off}>OFF</span>{\" \"}\n        <FontAwesomeIcon icon={faTimes} size={\"lg\"} style={{ color: \"red\" }} />{\" \"}\n        <br />\n        <span onClick={() => toggleHandler()} className={styles.link}>\n          <b>Turn On?</b>\n        </span>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <b>Notifications:</b> {userInfoHeader}\n      <center>\n        <span className={styles.validations}>{error}</span>\n      </center>\n      <hr />\n    </>\n  );\n};\n\nexport default MessageInfoHeader;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleNotificationReset } from \"../../store/actions\";\nimport ProfileHeader from \"../../components/ProfileHeader/ProfileHeader\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nconst Profile = () => {\n  const token = useSelector((state) => state.auth.token);\n  const user = useSelector((state) => state.auth.user);\n  const notificationSuccess = useSelector(\n    (state) => state.auth.notificationSuccess\n  );\n  const error = useSelector((state) => state.auth.error);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    return () => {\n      if (notificationSuccess || error) {\n        dispatch(toggleNotificationReset());\n      }\n    };\n  }, [dispatch, notificationSuccess, error]);\n\n  const notificationLoading = useSelector((state) => state.auth.loading);\n\n  const messageInfoHeader = notificationLoading ? (\n    <Spinner />\n  ) : (\n    <ProfileHeader user={user} token={token} />\n  );\n\n  return (\n    <Container>\n      <Jumbotron>\n        <center>\n          <h1>Profile</h1>\n        </center>\n        <br />\n        {messageInfoHeader}\n        <b>Name:</b> {user.name}\n        <br />\n        <b>Email: </b> {user.email}\n        <br />\n        <b>Role: </b> {user.role}\n      </Jumbotron>\n    </Container>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}